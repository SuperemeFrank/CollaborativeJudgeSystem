{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { routing } from \"./app.routes\";\nimport { DataService } from \"./services/data.service\";\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { FormsModule } from '@angular/forms';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HttpModule } from '@angular/http';\nimport { AuthService } from './services/auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule.forRoot(),\n    routing,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [\n    {\n      provide: \"data\",\n      useClass: DataService   // make service global\n    },\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Routes, RouterModule} from \"@angular/router\";\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"problems\",\n    pathMatch: \"full\"\n  },\n  {\n    path: \"problems\",\n    component: ProblemListComponent\n  },\n  {\n    path: \"problems/:id\",\n    component: ProblemDetailComponent\n  },\n  {\n    path: \"**\",\n    redirectTo: \"problems\"\n  }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{title}}</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search Problem\\\" aria-label=\\\"Search\\\">\\n    </form>\\n    <ul class=\\\"nav navbar-nav narbar-right\\\">\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\"\\n        aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n        {{username}}\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Myprofile</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Favorites</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">My Submission</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\n        </div>\\n    </li>\\n      <form class=\\\"navbar-form\\\">\\n        <button id=\\\"qsLoginBtn\\\"\\n          class=\\\"btn btn-primary my-2 my-sm-0\\\"\\n          *ngIf=\\\"!auth.isAuthenticated()\\\"\\n          (click)=\\\"auth.login()\\\" type=\\\"button\\\">\\n            Log In\\n        </button>\\n\\n        <button id=\\\"qsLogoutBtn\\\"\\n          class=\\\"btn btn-primary my-2 my-sm-0\\\"\\n          *ngIf=\\\"auth.isAuthenticated()\\\"\\n          (click)=\\\"auth.logout()\\\" type=\\\"button\\\">\\n            Log Out\\n        </button>\\n      </form>\\n    </ul>\\n  </div>\\n  </nav>\\n</div>\\n\"","import { Component, OnInit} from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n  title = \"Collaborative Judge System\";\n  username = \"\";\n\n  constructor(public auth: AuthService) {\n    auth.handleAuthentication();\n  }\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <form #formRef=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemName\\\">Problem Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\" name=\\\"problemName\\\"\\n      required placeholder=\\\"Enter Problem Name\\\" [(ngModel)]=\\\"newProblem.name\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"problemDesc\\\">Problem Description</label>\\n      <textarea type=\\\"text\\\" row=\\\"3\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\" name=\\\"problemDesc\\\"\\n      required placeholder=\\\"Enter Problem Description\\\" [(ngModel)]=\\\"newProblem.desc\\\"></textarea>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"difficulty\\\">Difficulty</label>\\n      <select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n      [(ngModel)]=\\\"newProblem.difficulty\\\">\\n        <option value=\\\"default\\\" disabled selected>Select difficulty</option>\\n        <option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n          {{difficulty}}\\n        </option>\\n      </select>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addProblem()\\\">Add Problem</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from \"../../models/problem.model\";\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n  id: 0,\n  name: \"\",\n  desc: \"\",\n  difficulty: \"default\"\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n\n  public difficulties = [\"Easy\", \"Medium\", \"Hard\", \"Super\"];\n\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n  constructor(@Inject(\"data\") private data) { }\n\n  ngOnInit() {\n  }\n\n  addProblem(): void {\n    this.data.addProblem(this.newProblem)\n            .catch(error => console.log(error._body));\n    this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n  <div class=\\\"col-xs-12 col-md-4\\\">\\n    <div class=\\\"\\\">\\n      <h2>\\n        {{problem.id}}.{{problem.name}}\\n      </h2>\\n      <p>\\n        {{problem.desc}}\\n      </p>\\n      <br />\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n  constructor(\n    private route: ActivatedRoute,\n    @Inject(\"data\") private data\n  ) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.data.getProblem(+params['id'])\n                .then(problem => this.problem = problem);\n    });\n  }\n}\n","module.exports = \".difficulty {\\n  min-width: 65px;\\n  margin-right: 10px;\\n}\\n.label.difficulty {\\n  padding-top: 0.6em;\\n  color: #fbfbfa;\\n  font-size: 12px;\\n}\\n.title {\\n  font-size: 1.2em;\\n}\\n.diff-easy {\\n  background-color: #42ebf4;\\n}\\n.diff-medium {\\n  background-color: #92cf5c;\\n}\\n.diff-hard {\\n  background-color: #dd0d1e;\\n}\\n.diff-super {\\n  background-color: #8d16e2;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-new-problem></app-new-problem>\\n  <div class=\\\"list-group\\\">\\n    <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\" [routerLink]=\\\"['/problems', problem.id]\\\">\\n      <span class=\\\"{{'pull-left label difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">{{problem.difficulty}}</span>\\n      <strong>{{problem.id}}.{{problem.name}}</strong>\\n    </a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit {\n  problems: Problem[] = [];\n\n  subscriptionProblems: Subscription;\n\n  constructor(@Inject(\"data\") private data) { }  // get data\n\n  ngOnInit() {\n    this.getProblems();\n  }\n  getProblems(): void {\n    this.subscriptionProblems = this.data.getProblems()\n                              .subscribe(problems => this.problems = problems);\n  }\n\n}\n","// src/app/auth/auth.service.ts\n\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport * as auth0 from 'auth0-js';\n\n(window as any).global = window;\n\n@Injectable()\nexport class AuthService {\n\n  auth0 = new auth0.WebAuth({\n    clientID: 'tVCyhEeI5TDWfbIAw_oVi7Vfz5fDg7e6',\n    domain: 'frankyu.auth0.com',\n    responseType: 'token id_token',\n    audience: 'https://frankyu.auth0.com/userinfo',\n    redirectUri: 'http://localhost:3000',\n    scope: 'openid'\n  });\n\n  constructor(public router: Router) {}\n\n  public login(): void {\n    this.auth0.authorize();\n  }\n  public handleAuthentication(): void {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n        this.router.navigate(['/']);\n      } else if (err) {\n        this.router.navigate(['/']);\n        console.log(err);\n        alert(`Error: ${err.error}. Check the console for further details.`);\n      }\n    });\n  }\n\n  private setSession(authResult): void {\n    // Set the time that the access token will expire at\n    const expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n  }\n\n  public logout(): void {\n    // Remove tokens and expiry time from localStorage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    // Go back to the home route\n    this.router.navigate(['/']);\n  }\n\n  public isAuthenticated(): boolean {\n    // Check whether the current time is past the\n    // access token's expiry time\n    const expiresAt = JSON.parse(localStorage.getItem('expires_at') || '{}');\n    return new Date().getTime() < expiresAt;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Problem } from '../models/problem.model';\nimport { PROBLEMS } from '../mock-problems';\nimport { Http, Response, Headers} from '@angular/http';\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\nimport { Observable } from \"rxjs/Observable\";\nimport \"rxjs/add/operator/toPromise\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { RequestOptions } from \"@angular/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private problemsSource = new BehaviorSubject<Problem[]>([]);\n\n  constructor(private http: Http) { }\n  getProblems(): Observable<Problem[]> {\n    this.http.get(\"api/v1/problems\")\n      .toPromise()\n      .then((res: Response) => {\n        this.problemsSource.next(res.json());\n      })\n      .catch(this.handleError);\n\n    return this.problemsSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    return this.http.get(`api/v1/problems/${id}`)\n                    .toPromise()\n                    .then((res: Response) => res.json())\n                    .catch(this.handleError);\n  }\n  private headers: Headers = new Headers({ 'content-type' : 'application/json' });\n  private options: RequestOptions = new RequestOptions({ headers: this.headers });\n  addProblem(problem: Problem): Promise<Problem> {\n\n    return this.http.post('/api/v1/problems', problem, this.options)\n      .toPromise()\n      .then((res: Response) => {\n        this.getProblems(); // to refresh the page\n        return res.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // error handler\n  private handleError(error: any): Promise<any> {\n    console.error('An error occurred', error);\n    return Promise.reject(error.body || error);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}